(window.webpackJsonp=window.webpackJsonp||[]).push([[52],{294:function(t,v,_){"use strict";_.r(v);var d=_(0),r=Object(d.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var t=this,v=t.$createElement,_=t._self._c||v;return _("div",{staticClass:"content"},[_("h1",{attrs:{id:"显示vim当前环境变量"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#显示vim当前环境变量","aria-hidden":"true"}},[t._v("#")]),t._v(" 显示vim当前环境变量")]),t._v(" "),_("table",[_("thead",[_("tr",[_("th",[t._v("命令")]),t._v(" "),_("th",[t._v("展示内容")])])]),t._v(" "),_("tbody",[_("tr",[_("td",[t._v(":abbreviate")]),t._v(" "),_("td",[t._v("list abbreviations")])]),t._v(" "),_("tr",[_("td",[t._v(":args")]),t._v(" "),_("td",[t._v("argument list")])]),t._v(" "),_("tr",[_("td",[t._v(":augroup")]),t._v(" "),_("td",[t._v("augroups")])]),t._v(" "),_("tr",[_("td",[t._v(":autocmd")]),t._v(" "),_("td",[t._v("list auto-commands")])]),t._v(" "),_("tr",[_("td",[t._v(":buffers")]),t._v(" "),_("td",[t._v("list buffers")])]),t._v(" "),_("tr",[_("td",[t._v(":breaklist")]),t._v(" "),_("td",[t._v("list current breakpoints")])]),t._v(" "),_("tr",[_("td",[t._v(":cabbrev")]),t._v(" "),_("td",[t._v("list command mode abbreviations")])]),t._v(" "),_("tr",[_("td",[t._v(":changes")]),t._v(" "),_("td",[t._v("changes")])]),t._v(" "),_("tr",[_("td",[t._v(":cmap")]),t._v(" "),_("td",[t._v("list command mode maps")])]),t._v(" "),_("tr",[_("td",[t._v(":command")]),t._v(" "),_("td",[t._v("list commands")])]),t._v(" "),_("tr",[_("td",[t._v(":compiler")]),t._v(" "),_("td",[t._v("list compiler scripts")])]),t._v(" "),_("tr",[_("td",[t._v(":digraphs")]),t._v(" "),_("td",[t._v("digraphs")])]),t._v(" "),_("tr",[_("td",[t._v(":file")]),t._v(" "),_("td",[t._v("print filename, cursor position and status (like Ctrl-G)")])]),t._v(" "),_("tr",[_("td",[t._v(":filetype")]),t._v(" "),_("td",[t._v("on/off settings for filetype detect/plugins/indent")])]),t._v(" "),_("tr",[_("td",[t._v(":function")]),t._v(" "),_("td",[t._v("list user-defined functions (names and argument lists but not the full code)")])]),t._v(" "),_("tr",[_("td",[t._v(":function Foo")]),t._v(" "),_("td",[t._v("user-defined function Foo() (full code list)")])]),t._v(" "),_("tr",[_("td",[t._v(":highlight")]),t._v(" "),_("td",[t._v("highlight groups")])]),t._v(" "),_("tr",[_("td",[t._v(":history c")]),t._v(" "),_("td",[t._v("command history")])]),t._v(" "),_("tr",[_("td",[t._v(":history =")]),t._v(" "),_("td",[t._v("expression history")])]),t._v(" "),_("tr",[_("td",[t._v(":history s")]),t._v(" "),_("td",[t._v("search history")])]),t._v(" "),_("tr",[_("td",[t._v(":history")]),t._v(" "),_("td",[t._v("your commands")])]),t._v(" "),_("tr",[_("td",[t._v(":iabbrev")]),t._v(" "),_("td",[t._v("list insert mode abbreviations")])]),t._v(" "),_("tr",[_("td",[t._v(":imap")]),t._v(" "),_("td",[t._v("list insert mode maps")])]),t._v(" "),_("tr",[_("td",[t._v(":intro")]),t._v(" "),_("td",[t._v("the Vim splash screen, with summary version info")])]),t._v(" "),_("tr",[_("td",[t._v(":jumps")]),t._v(" "),_("td",[t._v("your movements")])]),t._v(" "),_("tr",[_("td",[t._v(":language")]),t._v(" "),_("td",[t._v("current language settings")])]),t._v(" "),_("tr",[_("td",[t._v(":let")]),t._v(" "),_("td",[t._v("all variables")])]),t._v(" "),_("tr",[_("td",[t._v(":let FooBar")]),t._v(" "),_("td",[t._v("variable FooBar")])]),t._v(" "),_("tr",[_("td",[t._v(":let g:")]),t._v(" "),_("td",[t._v("global variables")])]),t._v(" "),_("tr",[_("td",[t._v(":let v:")]),t._v(" "),_("td",[t._v("Vim variables")])]),t._v(" "),_("tr",[_("td",[t._v(":list")]),t._v(" "),_("td",[t._v("buffer lines (many similar commands)")])]),t._v(" "),_("tr",[_("td",[t._v(":lmap")]),t._v(" "),_("td",[t._v("language mappings (set by keymap or by lmap)")])]),t._v(" "),_("tr",[_("td",[t._v(":ls")]),t._v(" "),_("td",[t._v("buffers")])]),t._v(" "),_("tr",[_("td",[t._v(":ls!")]),t._v(" "),_("td",[t._v('buffers, including "unlisted" buffers')])]),t._v(" "),_("tr",[_("td",[t._v(":map!")]),t._v(" "),_("td",[t._v("Insert and Command-line mode maps (imap, cmap)")])]),t._v(" "),_("tr",[_("td",[t._v(":map")]),t._v(" "),_("td",[t._v("Normal and Visual mode maps (nmap, vmap, xmap, smap, omap)")])]),t._v(" "),_("tr",[_("td",[t._v(":map<buffer>")]),t._v(" "),_("td",[t._v("buffer local Normal and Visual mode maps")])]),t._v(" "),_("tr",[_("td",[t._v(":map!<buffer>")]),t._v(" "),_("td",[t._v("buffer local Insert and Command-line mode maps")])]),t._v(" "),_("tr",[_("td",[t._v(":marks")]),t._v(" "),_("td",[t._v("marks")])]),t._v(" "),_("tr",[_("td",[t._v(":menu")]),t._v(" "),_("td",[t._v("menu items")])]),t._v(" "),_("tr",[_("td",[t._v(":messages")]),t._v(" "),_("td",[t._v("message history")])]),t._v(" "),_("tr",[_("td",[t._v(":nmap")]),t._v(" "),_("td",[t._v("Normal-mode mappings only")])]),t._v(" "),_("tr",[_("td",[t._v(":omap")]),t._v(" "),_("td",[t._v("Operator-pending mode mappings only")])]),t._v(" "),_("tr",[_("td",[t._v(":print")]),t._v(" "),_("td",[t._v("display buffer lines (useful after :g or with a range)")])]),t._v(" "),_("tr",[_("td",[t._v(":reg")]),t._v(" "),_("td",[t._v("registers")])]),t._v(" "),_("tr",[_("td",[t._v(":scriptnames")]),t._v(" "),_("td",[t._v("all scripts sourced so far")])]),t._v(" "),_("tr",[_("td",[t._v(":set all")]),t._v(" "),_("td",[t._v("all options, including defaults")])]),t._v(" "),_("tr",[_("td",[t._v(":setglobal")]),t._v(" "),_("td",[t._v("global option values")])]),t._v(" "),_("tr",[_("td",[t._v(":setlocal")]),t._v(" "),_("td",[t._v("local option values")])]),t._v(" "),_("tr",[_("td",[t._v(":set")]),t._v(" "),_("td",[t._v("options with non-default value")])]),t._v(" "),_("tr",[_("td",[t._v(":set termcap")]),t._v(" "),_("td",[t._v("list terminal codes and terminal keys")])]),t._v(" "),_("tr",[_("td",[t._v(":smap")]),t._v(" "),_("td",[t._v("Select-mode mappings only")])]),t._v(" "),_("tr",[_("td",[t._v(":spellinfo")]),t._v(" "),_("td",[t._v("spellfiles used")])]),t._v(" "),_("tr",[_("td",[t._v(":syntax")]),t._v(" "),_("td",[t._v("syntax items")])]),t._v(" "),_("tr",[_("td",[t._v(":syn sync")]),t._v(" "),_("td",[t._v("current syntax sync mode")])]),t._v(" "),_("tr",[_("td",[t._v(":tabs")]),t._v(" "),_("td",[t._v("tab pages")])]),t._v(" "),_("tr",[_("td",[t._v(":tags")]),t._v(" "),_("td",[t._v("tag stack contents")])]),t._v(" "),_("tr",[_("td",[t._v(":undolist")]),t._v(" "),_("td",[t._v("leaves of the undo tree")])]),t._v(" "),_("tr",[_("td",[t._v(":verbose")]),t._v(" "),_("td",[t._v("show info about where a map or autocmd or function is defined")])]),t._v(" "),_("tr",[_("td",[t._v(":version")]),t._v(" "),_("td",[t._v("list version and build options")])]),t._v(" "),_("tr",[_("td",[t._v(":vmap")]),t._v(" "),_("td",[t._v("Visual and Select mode mappings only")])]),t._v(" "),_("tr",[_("td",[t._v(":winpos")]),t._v(" "),_("td",[t._v("Vim window position (gui)")])]),t._v(" "),_("tr",[_("td",[t._v(":xmap")]),t._v(" "),_("td",[t._v("visual mode maps only")])])])])])}],!1,null,null,null);r.options.__file="vim-current-env.md";v.default=r.exports}}]);